package Forms;

import Graphs.DataReader;
import Graphs.GraphFinder;
import Graphs.SCCFinder;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jgraph.JGraph;
import org.jgraph.graph.CellView;
import org.jgraph.graph.DefaultCellViewFactory;
import org.jgraph.graph.DefaultEdge;
import org.jgraph.graph.DefaultGraphCell;
import org.jgraph.graph.EdgeView;
import org.jgraph.graph.GraphConstants;
import org.jgraph.graph.GraphLayoutCache;
import org.jgraph.graph.PortView;
import org.jgrapht.ext.JGraphModelAdapter;
import org.jgrapht.graph.ListenableDirectedGraph;

public class MainWindow extends javax.swing.JFrame {
	private final JFileChooser fc;
	private File file;
	private JGraph graphComponent;
	private JGraphModelAdapter<String, DefaultEdge> graphModel;
	private GraphLayoutCache graphView;
	private ListenableDirectedGraph<String, DefaultEdge> directedGraph;

	/** Creates new form MainWindow */
	public MainWindow() {
		//TODO: replace String-node with Node Class
		//TODO: convert String-nodes to Int-nodes ?
		initCustomComponents();
		initComponents();
		this.setIconImage(new javax.swing.ImageIcon(getClass().getResource(Graphs.AppDefs.MAIN_ICON)).getImage());
		this.setLocationRelativeTo(null);
		startButt.setEnabled(false);
		fc = new JFileChooser();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                infoPanel = new javax.swing.JPanel();
                startButt = new javax.swing.JButton();
                sccsNumberTextField = new javax.swing.JTextField();
                sccNumLabel = new javax.swing.JLabel();
                sccSizeLabel = new javax.swing.JLabel();
                diameterLabel = new javax.swing.JLabel();
                greatestDiameterTextField = new javax.swing.JTextField();
                openButt = new javax.swing.JButton();
                datafileTextField = new javax.swing.JTextField();
                jScrollPane2 = new javax.swing.JScrollPane();
                sccSizesTextArea = new javax.swing.JTextArea();
                graphPane = new javax.swing.JScrollPane(graphComponent);
                menubar = new javax.swing.JMenuBar();
                fileMenu = new javax.swing.JMenu();
                editMenu = new javax.swing.JMenu();
                aboutMenu = new javax.swing.JMenu();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("JGraphs");

                startButt.setText("Start");
                startButt.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                startButtActionPerformed(evt);
                        }
                });

                sccsNumberTextField.setEditable(false);

                sccNumLabel.setText("number of SCCs :");

                sccSizeLabel.setText("SSCs sizes:");

                diameterLabel.setText("greatest SCC's Diameter:");

                greatestDiameterTextField.setEditable(false);

                openButt.setText("Open File");
                openButt.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                openButtActionPerformed(evt);
                        }
                });

                datafileTextField.setEditable(false);

                sccSizesTextArea.setColumns(20);
                sccSizesTextArea.setEditable(false);
                sccSizesTextArea.setRows(5);
                jScrollPane2.setViewportView(sccSizesTextArea);

                javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
                infoPanel.setLayout(infoPanelLayout);
                infoPanelLayout.setHorizontalGroup(
                        infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(infoPanelLayout.createSequentialGroup()
                                                .addComponent(openButt, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(datafileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(infoPanelLayout.createSequentialGroup()
                                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(startButt)
                                                        .addComponent(sccNumLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                                        .addComponent(diameterLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(greatestDiameterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(sccsNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(sccSizeLabel))))
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
                );

                infoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {openButt, startButt});

                infoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {greatestDiameterTextField, sccSizeLabel, sccsNumberTextField});

                infoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {diameterLabel, sccNumLabel});

                infoPanelLayout.setVerticalGroup(
                        infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(infoPanelLayout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(startButt))
                                        .addGroup(infoPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                                                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(openButt)
                                                                        .addComponent(datafileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(sccSizeLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(sccsNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(sccNumLabel))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(greatestDiameterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(diameterLabel))))))
                                .addContainerGap())
                );

                infoPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {diameterLabel, greatestDiameterTextField, sccNumLabel, sccsNumberTextField});

                infoPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {datafileTextField, openButt, sccSizeLabel, startButt});

                graphPane.setBackground(Color.red);

                fileMenu.setText("File");
                menubar.add(fileMenu);

                editMenu.setText("Edit");
                menubar.add(editMenu);

                aboutMenu.setText("About");
                menubar.add(aboutMenu);

                setJMenuBar(menubar);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(graphPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                                        .addComponent(infoPanel, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(graphPane, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void openButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	    fc.setDragEnabled(true);
	    int retVal = fc.showOpenDialog(infoPanel);
	    if (retVal == JFileChooser.APPROVE_OPTION) {
		    file = fc.getSelectedFile();
		    datafileTextField.setText(file.getName());
		    startButt.setEnabled(true);
	    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void startButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
	    clearFields();
	    try {
		    DataReader dr = new DataReader(file);
		    if (dr.readFile(directedGraph)) {
			    SCCFinder scc = new SCCFinder(directedGraph);
			    int[] sccSizes = scc.getSCCSizePerSubgraph();
			    sccsNumberTextField.setText(String.valueOf(sccSizes.length));
			    for (int sccNum = 0; sccNum < sccSizes.length; sccNum++)
				    sccSizesTextArea.append(String.format("%0" + String.valueOf(sccSizes.length).length()
									  + "d. SCC size: %d\n", sccNum + 1, sccSizes[sccNum]));
			    GraphFinder gf = new GraphFinder(directedGraph);
			    greatestDiameterTextField.setText(String.valueOf(gf.getGreatestDiameter()));
		    } else {
			    throw new FileNotFoundException();
		    }
	    } catch (FileNotFoundException fnfe) {
		    JOptionPane.showMessageDialog(this, "Unable to read data\nPlease choose another file",
						  "Error Reading File!", JOptionPane.ERROR_MESSAGE);
		    fnfe.printStackTrace();
	    }
    }//GEN-LAST:event_jButton2ActionPerformed

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JMenu aboutMenu;
        private javax.swing.JTextField datafileTextField;
        private javax.swing.JLabel diameterLabel;
        private javax.swing.JMenu editMenu;
        private javax.swing.JMenu fileMenu;
        private javax.swing.JScrollPane graphPane;
        private javax.swing.JTextField greatestDiameterTextField;
        private javax.swing.JPanel infoPanel;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JMenuBar menubar;
        private javax.swing.JButton openButt;
        private javax.swing.JLabel sccNumLabel;
        private javax.swing.JLabel sccSizeLabel;
        private javax.swing.JTextArea sccSizesTextArea;
        private javax.swing.JTextField sccsNumberTextField;
        private javax.swing.JButton startButt;
        // End of variables declaration//GEN-END:variables

	private void clearFields() {
		sccsNumberTextField.setText("");
		greatestDiameterTextField.setText("");
		sccSizesTextArea.setText("");
	}

	private void initCustomComponents() {
		//TODO: set a layout to get vertexes non overlapping
		directedGraph = new ListenableDirectedGraph<String, DefaultEdge>(DefaultEdge.class);
		graphModel = new JGraphModelAdapter<String, DefaultEdge>(directedGraph);
		graphView = new GraphLayoutCache(graphModel, new DefaultCellViewFactory());

		for (CellView cv : graphView.getCellViews()) {
			System.out.println("in");
			GraphConstants.setLineStyle(cv.getAttributes(), GraphConstants.STYLE_SPLINE);
			GraphConstants.setRouting(cv.getAttributes(), GraphConstants.ROUTING_DEFAULT);
			GraphConstants.setLineEnd(cv.getAttributes(), GraphConstants.ARROW_SIMPLE);
			GraphConstants.setBendable(cv.getAttributes(), true);
			GraphConstants.setAutoSize(cv.getAttributes(), true);
			GraphConstants.setBackground(cv.getAttributes(), Color.green);
			GraphConstants.setConnectable(cv.getAttributes(), false);
			GraphConstants.setDisconnectable(cv.getAttributes(), false);
			GraphConstants.setEditable(cv.getAttributes(), false);
//			DefaultGraphCell cell = graphModel.getCellFactory().createEdgeCell((DefaultEdge)cv.getCell());
//			graphView.edit(cell.getAttributes());
//			cell = graphModel.getCellFactory().createVertexCell((String)cv.getCell());
//			graphView.edit(cell.getAttributes());
		}

		graphComponent = new JGraph(graphModel);
		graphComponent.setAntiAliased(true);
		graphComponent.setEditable(false);
		graphComponent.setConnectable(false);
		graphComponent.setDisconnectable(false);
		graphComponent.setDisconnectOnMove(false);

//		graphComponent.setGridEnabled(true);
//		graphComponent.setGridVisible(true);
//		graphComponent.setSelectionEnabled(false);
//		graphComponent.setEnabled(false);
	}

}
